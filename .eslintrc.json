{
  "root": true,
  "parserOptions": {
    "project": [
      "tsconfig.json"
    ],
    "createDefaultProgram": true
  },
  "extends": [
    "plugin:@angular-eslint/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@angular-eslint/template/process-inline-templates"
  ],
  "rules": {
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-inferrable-types": [
      "error",
      {
        "ignoreParameters": true
      }
    ],
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "no-empty-function": "warn",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-shadow": [
      "error",
      {
        "hoist": "all"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      }
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single"
    ],
    "@typescript-eslint/typedef": [
      "error",
      {
        "variableDeclaration": false,
        "memberVariableDeclaration": false,
        "propertyDeclaration": false
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/dot-notation": "off",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/unified-signatures": "error",
    "arrow-body-style": "error",
    "constructor-super": "error",
    "new-cap": [
      0,
      {
        "capIsNew": false,
        "newIsCap": false,
        "properties": false
      }
    ],
    "max-lines-per-function": [
      "warn",
      20
    ],
    "max-depth": [
      "warn",
      2
    ],
    "no-empty": "error",
    "no-debugger": "error",
    "array-callback-return": "warn",
    "for-direction": "error",
    "getter-return": "error",
    "no-await-in-loop": "warn",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "warn",
    "no-constructor-return": "error",
    "no-control-regex": "warn",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "warn",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-empty-character-class": "warn",
    "no-empty-pattern": "warn",
    "no-ex-assign": "error",
    "no-fallthrough": "error",
    "no-unused-private-class-members": "warn",
    "no-unsafe-optional-chaining": "warn",
    "quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "sort-imports": "off",
    "sort-keys": "off",
    "valid-typeof": "error",
    "block-scoped-var": "error",
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "@angular-eslint/component-selector": [
      "error",
      {
        "type": "element",
        "prefix": "",
        "style": "kebab-case"
      }
    ],
    "@angular-eslint/directive-selector": [
      "error",
      {
        "type": "attribute",
        "prefix": "app",
        "style": "camelCase"
      }
    ],
    "@angular-eslint/component-class-suffix": "error",
    "@angular-eslint/directive-class-suffix": "error",
    "@angular-eslint/no-host-metadata-property": "error",
    "@angular-eslint/no-input-rename": "error",
    "@angular-eslint/no-inputs-metadata-property": "error",
    "@angular-eslint/no-output-rename": "error",
    "@angular-eslint/no-outputs-metadata-property": "error",
    "@angular-eslint/use-lifecycle-interface": "error",
    "@angular-eslint/use-pipe-transform-interface": "error",
    "@angular-eslint/no-empty-lifecycle-method": "error",
    "@angular-eslint/no-empty-function": "off",
    "@angular-eslint/no-output-on-prefix": "off",
    "@angular-eslint/no-lifecycle-call": "error",
    "@angular-eslint/no-pipe-impure": "error"
  }
}